#!/usr/bin/env bash

cd "$(dirname "$0")"

# Set environment variables for dev
export APP_ENV=${APP_ENV:-local}
export APP_PORT=${APP_PORT:-80}
export MYSQL_PORT=${MYSQL_PORT:-3306}

COMPOSE="docker-compose"

# Is the environment running
PSRESULT="$(docker ps -q)"
if [ ! -z "$PSRESULT" ]; then
    EXEC="yes"
else
    EXEC="no"
fi
# If we pass any arguments...
if [ $# -gt 0 ];then

    # if env file is found, source it.
    if [ -f .env ]; then
        source .env
    fi


    # If "art" is used, pass-thru to "artisan"
    # inside a new container
    if [ "$1" == "art" ]; then
        shift 1
        $COMPOSE run --rm \
            -w /var/www/html \
            app \
            php artisan "$@"

    # Boot up containers
    elif [ "$1" == "start" ]; then
        $COMPOSE up -d

    # If "tinker" is used, pass-thru to "artisan tinker"
    # inside a new container
    elif [ "$1" == "tinker" ]; then
        shift 1
        if [ "$EXEC" == "yes" ]; then
            echo "run exec"
            $COMPOSE exec \
                -w /var/www/html \
                app \
                php artisan tinker
        else
            echo "run rm"
            $COMPOSE run --rm \
                -w /var/www/html \
                app \
                php artisan tinker
        fi

    # If "composer" is used, pass-thru to "composer"
    # inside a new container
    elif [ "$1" == "composer" ]; then
        shift 1
        $COMPOSE run --rm \
            -w /var/www/html \
            app \
            composer "$@"

    # If "test" is used, run unit tests,
    # pass-thru any extra arguments to php-unit
    elif [ "$1" == "test" ]; then
        shift 1
        $COMPOSE run --rm \
            -w /var/www/html \
            app \
            ./vendor/bin/phpunit "$@"
            

    # If "npm" is used, run npm
    # from our node container
    elif [ "$1" == "npm" ]; then
        shift 1
        $COMPOSE run --rm \
            -w /var/www/html \
            node \
            npm "$@"

    # If "hot" is used, run npm run hot
    # from our node container
    elif [ "$1" == "hot" ]; then
        shift 1
        $COMPOSE run --rm \
            -w /var/www/html \
            -p "8080:8080" \
            node \
            npm run hot
    # If "yarn" is used, run yarn
    # from our node container
    elif [ "$1" == "yarn" ]; then
        shift 1
        $COMPOSE run --rm \
            -w /var/www/html \
            node \
            yarn "$@"

    # If "gulp" is used, run gulp
    # from our node container
    elif [ "$1" == "gulp" ]; then
        shift 1
        $COMPOSE run --rm \
            -w /var/www/html \
            node \
            ./node_modules/.bin/gulp "$@"

    elif [ "$1" == "bash" ] || [ "$1" == "ssh" ]; then
        shift 1
        $COMPOSE run --rm \
            -w /var/www/html \
            app \
            bash
    # Else, pass-thru args to docker-compose
    else
        $COMPOSE "$@"
    fi

else
    $COMPOSE ps
fi
